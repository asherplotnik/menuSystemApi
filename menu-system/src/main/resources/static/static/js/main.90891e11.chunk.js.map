{"version":3,"sources":["Models/Enums.ts","Redux/AuthState.ts","Models/CustomerModel.ts","Redux/Store.ts","Components/LayoutArea/Header/Header.tsx","Services/errorService.ts","Services/Globals.ts","Services/jwtAxios.ts","Components/MainArea/AdminArea/DeleteBranch/DeleteBranch.tsx","Components/MainArea/AdminArea/DeleteDish/DeleteDish.tsx","Components/MainArea/AdminArea/DeleteUser/DeleteUser.tsx","Components/MainArea/AdminArea/NewBranch/NewBranch.tsx","Components/MainArea/AdminArea/NewDish/NewDish.tsx","Components/MainArea/AdminArea/NewUser/NewUser.tsx","Models/BranchModel.ts","Components/MainArea/AdminArea/UpdateBranch/UpdateBranch.tsx","Components/MainArea/AdminArea/UpdateDish/UpdateDish.tsx","Components/MainArea/AdminArea/UpdateUser/UpdateUser.tsx","Components/MainArea/AdminArea/AdminMenu/AdminMenu.tsx","Components/MainArea/AdminArea/Admin/Admin.tsx","Components/MainArea/Login/Login.tsx","Components/MainArea/DishCard/DishCard.tsx","Models/EntryPayload.ts","Models/OrderPayload.ts","Components/MainArea/MakeOrder/MakeOrder.tsx","Components/MainArea/SingleOrder/SingleOrder.tsx","Components/MainArea/OrderDisplay/OrderDisplay.tsx","Models/OrdersByDates.ts","Components/MainArea/PaidOrders/PaidOrders.tsx","Components/MainArea/ReadyOrders/ReadyOrders.tsx","Components/MainArea/ServedOrders/ServedOrders.tsx","Components/MainArea/Routing/Routing.tsx","Components/LayoutArea/Layout.tsx","reportWebVitals.ts","index.tsx"],"names":["StatusEnum","LevelEnum","CategoryEnum","OrderType","AuthActionType","CustomerModel","id","name","address","phone","level","NONE","branchId","email","password","token","AuthState","auth","stored","JSON","parse","localStorage","getItem","this","removeAuthAction","type","RemoveAuth","reducers","combineReducers","currentState","action","newState","SetAuth","payload","setItem","stringify","removeItem","store","createStore","Header","history","useHistory","useState","state","setState","useEffect","getState","unSubscribe","subscribe","hide","undefined","console","log","className","Button","onClick","dispatch","push","errorAlert","error","response","alert","data","message","Globals","globals","urls","localUrl","jwtAxios","axios","create","interceptors","request","use","headers","successRes","status","Promise","reject","DeleteBranch","branches","setBranches","formRef","useRef","getBranches","get","then","catch","err","Form","ref","onSubmit","e","preventDefault","FormData","current","delete","res","Group","Label","Control","as","map","branch","value","DeleteDish","dishes","setDishes","getMenu","dishId","document","querySelector","dish","DeleteUser","users","setUsers","getUsers","userId","user","NewBranch","useForm","register","handleSubmit","errors","formState","post","required","minLength","NewDish","formData","append","description","category","toString","price","available","image1","item","image2","min","DRINK","STARTER","SIDE_DISH","SOUP","MAIN_COURSE","DESSERT","controlId","Check","label","File","NewUser","disableField","setDisableField","disabled","onChange","target","CUSTOMER","ADMIN","TABLE","KITCHEN","SERVICE","BranchModel","orders","UpdateBranch","fetchedBranch","setFetchedBranch","newBranch","put","defaultValue","UpdateDish","fetchedDish","setFetchedDish","set","temp","checked","src","primaryImage","alt","secondaryImage","UpdateUser","setValue","find","currentUser","parseInt","currentBranch","AdminMenu","showSide","setShowSide","Nav","Item","to","Admin","style","textAlign","path","component","exact","Login","switchLevel","loginDetails","pattern","DishCard","props","classMod","setClassMod","handleUp","selected","onMouseDown","onMouseEnter","onMouseUp","onMouseLeave","CardGroup","border","margin","Card","Img","width","height","variant","maxWidth","Body","Title","Text","EntryPayload","quantity","OrderPayload","orderType","note","entries","MakeOrder","selectedDishes","setSelectedDishes","key","setKey","up","setUp","handleSelectedDish","currEntry","i","length","menuTab","cat","title","Tab","eventKey","filter","index","Tabs","activeKey","onSelect","k","Table","currDish","menuDish","splice","handleCancel","order","PICKUP","padding","SingleOrder","myDate","Date","time","updatePage","setUpdatePage","ListGroup","Alert","getOrders","getHours","getMinutes","backgroundColor","entry","ready","handleUpdateEntry","OrderDisplay","setToken","setOrders","refreshOrders","setInterval","clearInterval","OrdersByDates","date","PaidOrders","showDates","setShowDates","showOrders","setShowOrders","calculateTotal","total","orderList","orderTime","PAID","orderDate","getFullYear","getMonth","getDate","getTime","curr","dateDiv","indexDate","dateGroup","indexOf","indexOrder","orderGroup","indexEntry","currDate","event","orderId","handleClickOrders","handleClickDates","arrangeOrdersByDate","ReadyOrders","ind","ServedOrders","Routing","Layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.90891e11.chunk.js","sourcesContent":["export enum StatusEnum {\r\n    NONE=\"NONE\", \r\n    ORDERED=\"ORDERED\", \r\n    READY=\"READY\", \r\n    SERVED=\"SERVED\", \r\n    PAID=\"PAID\", \r\n    ONROUTE=\"ONROUTE\", \r\n    DELIVERED=\"DELIVERED\", \r\n    CANCELED=\"CANCELED\", \r\n    RETURNED=\"RETURNED\"\r\n}\r\n\r\nexport enum LevelEnum {\r\n    NONE=\"NONE\", \r\n    CUSTOMER=\"CUSTOMER\",\r\n    KITCHEN=\"KITCHEN\",\r\n    ADMIN=\"ADMIN\",\r\n    SERVICE=\"SERVICE\",\r\n    TABLE=\"TABLE\"\r\n}\r\n\r\nexport enum CategoryEnum {\r\n    NONE=\"NONE\",\r\n    DRINK=\"DRINK\", \r\n    MAIN_COURSE=\"MAIN_COURSE\",\r\n    STARTER=\"STARTER\", \r\n    DESSERT=\"DESSERT\", \r\n    SOUP=\"SOUP\",\r\n    SIDE_DISH=\"SIDE_DISH\"\r\n}\r\n\r\nexport enum OrderType {\r\n    NONE=\"NONE\",\r\n    TABLE=\"TABLE\", \r\n    DELIVERY=\"DELIVERY\", \r\n    PICKUP=\"PICKUP\"\r\n}\r\n\r\n\r\n\r\n","\r\n// Handling Products AppState\r\n\r\nimport AuthModel from \"../Models/AuthModel\";\r\nimport CustomerModel from \"../Models/CustomerModel\";\r\n\r\n// Products AppState - המידע ברמת האפליקציה הקשור למוצרים - אלו בעצם כל המוצרים:\r\nexport class AuthState {\r\n    public auth: CustomerModel = new CustomerModel(); // We're going to create initial object\r\n    public constructor() {\r\n        const stored = JSON.parse(localStorage.getItem(\"auth\"));\r\n        if(stored) {\r\n            this.auth = stored;\r\n        } \r\n    }\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Types - אלו פעולות ניתן לבצע על המידע ברמת האפליקציה:\r\nexport enum AuthActionType {\r\n    SetAuth=\"SetAuth\",\r\n    RemoveAuth=\"RemoveAuth\", \r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Product Action - אובייקט המכיל את המידע עבור הפעולה שאנו מבצעים על המידע ברמת הפליקציה\r\nexport interface AuthAction {\r\n    type: AuthActionType;\r\n    payload?: any; // payload?: any; if the payload can be empty.\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Action Creators - מתאים עבור כל פעולה Action ומחזירות אובייקט payload-פונקציות המקבלות את ה\r\n\r\nexport function setAuthAction(auth: AuthModel): AuthAction {\r\n    return { type: AuthActionType.SetAuth, payload: auth };\r\n}\r\n\r\nexport function removeAuthAction(): AuthAction {\r\n    return { type: AuthActionType.RemoveAuth};\r\n}\r\n\r\n// ----------------------------------------------------------------------------------\r\n\r\n// Products Reducer - פונקציה המבצעת את הפעולה בפועל\r\nexport function AuthReducer(currentState: AuthState = new AuthState(), action: AuthAction): AuthState {\r\n    \r\n    const newState = {...currentState}; // Spread Operator - שכפול אובייקט\r\n\r\n    switch(action.type) {\r\n        case AuthActionType.SetAuth:\r\n            newState.auth = action.payload; \r\n            localStorage.setItem(\"auth\", JSON.stringify(newState.auth));\r\n            break;\r\n        case AuthActionType.RemoveAuth:\r\n            newState.auth = new CustomerModel();\r\n            localStorage.removeItem(\"auth\"); // clear user from the local storage.\r\n            break;\r\n    }\r\n\r\n    return newState;\r\n}\r\n","import { LevelEnum } from './Enums';\r\n\r\nclass CustomerModel {\r\n    public id:number=0 ;\r\n\tpublic name:string=\"\";\r\n\tpublic address:string=\"\";\r\n\tpublic phone:string=\"\";\r\n\tpublic level:LevelEnum=LevelEnum.NONE;\r\n\tpublic branchId:number;\r\n\tpublic email:string=\"\";\r\n    public password:string=\"\";\r\n\tpublic token:string=\"\";\r\n\r\n}\r\n\r\nexport default CustomerModel;\r\n","import { combineReducers, createStore } from \"redux\";\r\nimport { AuthReducer } from \"./AuthState\";\r\n\r\n\r\n// Single Reducer: \r\n// const store = createStore(productsReducer);\r\n\r\n// For getting ProductsState: \r\n// store.getState().products\r\n\r\n// ----------------------------------------------------------\r\n\r\n// Multiple Reducers: \r\nconst reducers = combineReducers({ AuthState: AuthReducer /*, employeesState: employeesReducer, customersState: customersReducer */});\r\nconst store = createStore(reducers);\r\n\r\n// For getting ProductsState: \r\n// store.getState().productsState.products\r\n// store.getState().employeesState.employees\r\n// store.getState().customersState.customers\r\n\r\n\r\n\r\nexport default store;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport CustomerModel from \"../../../Models/CustomerModel\";\r\nimport { LevelEnum } from \"../../../Models/Enums\";\r\nimport { removeAuthAction } from \"../../../Redux/AuthState\";\r\nimport store from \"../../../Redux/Store\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header(): JSX.Element {\r\n  const history = useHistory();\r\n  const [state, setState] = useState<CustomerModel>();\r\n  const handleLogout = () => {\r\n    store.dispatch(removeAuthAction());\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  useEffect(()=>{\r\n    setState(store.getState().AuthState.auth);\r\n  },[])\r\n  useEffect(() => {\r\n    const unSubscribe = store.subscribe(() => {\r\n      setState(store.getState().AuthState.auth);\r\n    });\r\n\r\n    return () => {\r\n      unSubscribe();\r\n    };\r\n  }, []);\r\n  let hide = state?.level === undefined || state?.level === LevelEnum.NONE;\r\n  console.log(state?.level);\r\n  return (\r\n    <div className=\"Header\">\r\n      <div>\r\n        <h3>MENU SYSTEM</h3>\r\n      </div>\r\n      {!hide && (\r\n        <div>\r\n          <span>{state?.name}</span> {\" \"}<Button onClick={handleLogout}>LOGOUT</Button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const errorAlert = (error:any) => {\r\n    if (error.response){\r\n        alert(error.response.data.message);\r\n    }else {\r\n        alert(\"ERROR !!!\");\r\n    }\r\n}\r\n","class Globals {\r\n}\r\nclass DevelopmentGlobals extends Globals {\r\n    public urls = {\r\n        products: \"http://localhost:8080/api/products/\",\r\n        couponImages: \"http://localhost:8080/images/\",\r\n        localUrl : \"http://localhost:8080/\"\r\n    };\r\n}\r\n\r\n// Global settings which are suitable only for production:\r\nclass ProductionGlobals extends Globals {\r\n    public urls = {\r\n        localUrl : \"https://food-order-display.herokuapp.com/\"\r\n    };\r\n}\r\n\r\n// Creating the correct object\r\nconst globals = process.env.NODE_ENV === \"development\" ? new DevelopmentGlobals() : new ProductionGlobals();\r\n\r\nexport default globals;\r\n","import axios from 'axios';\r\nimport { removeAuthAction } from \"../Redux/AuthState\";\r\nimport store from '../Redux/Store';\r\n\r\nconst jwtAxios = axios.create();\r\n\r\n// Request interceptor - מה אנו רוצים לבצע בכל שליחת בקשה לשרת\r\njwtAxios.interceptors.request.use(request => {\r\n\r\n    request.headers = {\r\n        \"token\": store.getState().AuthState.auth.token\r\n    };\r\n\r\n    return request;\r\n});\r\n\r\njwtAxios.interceptors.response.use(\r\n    successRes => {\r\n       return successRes;\r\n    }, \r\n    error => {\r\n      if (error.response.data.status===401){\r\n        store.dispatch(removeAuthAction());\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n\r\n\r\nexport default jwtAxios;\r\n","import \"./DeleteBranch.css\";\nimport { SyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { errorAlert } from \"../../../../Services/errorService\";\nimport globals from \"../../../../Services/Globals\";\nimport BranchModel from \"../../../../Models/BranchModel\";\nimport jwtAxios from \"../../../../Services/jwtAxios\";\nfunction DeleteBranch(): JSX.Element {\n    let [branches, setBranches] = useState<BranchModel[]>([]);\n    let formRef = useRef(null);\n  const getBranches = () => {\n    jwtAxios\n      .get(globals.urls.localUrl + \"admin/getBranches\")\n      .then((response) => {\n        setBranches(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  \n  useEffect(() => {\n    getBranches();\n  },[]);\n  \n  const handleDelete = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const formData = new FormData(formRef.current);\n    const branchId = formData.get(\"branch\");\n    jwtAxios\n      .delete(globals.urls.localUrl + \"admin/deleteBranch/\" + branchId)\n      .then((res) => {\n          getBranches();\n          alert(res.data);\n      })\n      .catch((err) => {\n        errorAlert(err);\n      });\n  };\n  return (\n    <div className=\"DeleteBranch\">\n      <h3>Delete Dish</h3>\n      <Form ref={formRef} onSubmit={handleDelete}>\n        <Form.Group>\n          <Form.Label>Select dish:</Form.Label>\n          <Form.Control name=\"branch\" as=\"select\">\n            {branches.map((branch) => {\n              return (\n                <option key={branch.id} value={branch.id}>\n                  {branch.id}) {branch.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Button type=\"submit\">DELETE</Button>\n      </Form>\n      <br />\n    </div>\n  );\n}\n\nexport default DeleteBranch;\n","import { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport DishModel from \"../../../../Models/DishModel\";\r\nimport { errorAlert } from \"../../../../Services/errorService\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport jwtAxios from \"../../../../Services/jwtAxios\";\r\nimport \"./DeleteDish.css\";\r\n\r\nfunction DeleteDish(): JSX.Element {\r\n  let [dishes, setDishes] = useState<DishModel[]>([]);\r\n  \r\n  const getMenu = () => {\r\n    jwtAxios\r\n      .get(globals.urls.localUrl + \"order/getMenu\")\r\n      .then((response) => {\r\n        setDishes(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getMenu();\r\n  }, []);\r\n\r\n  const handleDelete = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#deleteDishForm\"));\r\n    const dishId = formData.get(\"dish\");\r\n    jwtAxios\r\n      .delete(globals.urls.localUrl + \"admin/deleteDish/\" + dishId)\r\n      .then((res) => {\r\n        getMenu();\r\n        alert(res.data);\r\n      })\r\n      .catch((err) => {\r\n        errorAlert(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"DeleteDish\">\r\n      <h3>Delete Dish</h3>\r\n      <Form id=\"deleteDishForm\" onSubmit={handleDelete}>\r\n        <Form.Group>\r\n          <Form.Label>Select dish:</Form.Label>\r\n          <Form.Control name=\"dish\" as=\"select\">\r\n            {dishes.map((dish) => {\r\n              return (\r\n                <option key={dish.id} value={dish.id}>\r\n                  {dish.id}) {dish.name}\r\n                </option>\r\n              );\r\n            })}\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\">DELETE</Button>\r\n      </Form>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeleteDish;\r\n","import \"./DeleteUser.css\";\nimport { SyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { errorAlert } from \"../../../../Services/errorService\";\nimport globals from \"../../../../Services/Globals\";\nimport UserModel from \"../../../../Models/UserModel\";\nimport jwtAxios from \"../../../../Services/jwtAxios\";\nfunction DeleteUser(): JSX.Element {\n    let [users, setUsers] = useState<UserModel[]>([]);\n    let formRef = useRef(null);\n    const getUsers = () => {\n      jwtAxios\n          .get(globals.urls.localUrl + \"admin/getUsers\")\n          .then((response) => {\n            setUsers(response.data);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n      }\n      \n      useEffect(() => {\n        getUsers();\n      },[]);\n      \n      const handleDelete = (e: SyntheticEvent) => {\n        e.preventDefault();\n        const formData = new FormData(formRef.current);\n        const userId = formData.get(\"user\");\n        jwtAxios\n          .delete(globals.urls.localUrl + \"admin/deleteUser/\" + userId)\n          .then((res) => {\n            getUsers();\n            alert(res.data);\n          })\n          .catch((err) => {\n            errorAlert(err);\n          });\n      };\n\n    return (\n        <div className=\"DeleteUser\">\n\t\t<h3>Delete User</h3>\n      <Form ref={formRef} onSubmit={handleDelete}>\n        <Form.Group>\n          <Form.Label>Select dish:</Form.Label>\n          <Form.Control name=\"user\" as=\"select\">\n            {users.map((user) => {\n              return (\n                <option key={user.id} value={user.id}>\n                  {user.id}) {user.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n        <Button type=\"submit\">DELETE</Button>\n      </Form>\n      <br />\n        </div>\n    );\n}\n\nexport default DeleteUser;\n","import \"./NewBranch.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { errorAlert } from \"../../../../Services/errorService\";\nimport globals from \"../../../../Services/Globals\";\nimport BranchModel from \"../../../../Models/BranchModel\";\nimport jwtAxios from \"../../../../Services/jwtAxios\";\n\nfunction NewBranch(): JSX.Element {\n  const onSubmit = (data: BranchModel) => {\n    jwtAxios\n      .post<BranchModel>(globals.urls.localUrl + \"admin/addBranch\", data)\n      .then((response) => {\n        console.log(response.data);\n        alert(\"Branch added.\");\n      })\n      .catch((err) => {\n        errorAlert(err);\n      });\n  };\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<BranchModel>();\n\n  return (\n    <div className=\"NewBranch\">\n      <h3>Add New Branch</h3>\n      <div className=\"FormBranch\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group>\n            <Form.Label>Name:</Form.Label>\n            <Form.Control\n              {...register(\"name\", {\n                required: { value: true, message: \"please enter name\" },\n                minLength: {\n                  value: 5,\n                  message: \"please enter longer name\",\n                },\n              })}\n            />\n            <span>{errors.name?.message}</span>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Address:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              {...register(\"address\", {\n                required: { value: true, message: \"please enter address\" },\n                minLength: {\n                  value: 25,\n                  message: \"please enter longer address\",\n                },\n              })}\n            />\n            <span>{errors.address?.message}</span>\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n        <br />\n      </div>\n    </div>\n  );\n}\n\nexport default NewBranch;\n","import { Button, Form } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport DishModel from \"../../../../Models/DishModel\";\r\nimport { CategoryEnum } from \"../../../../Models/Enums\";\r\nimport { errorAlert } from \"../../../../Services/errorService\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport jwtAxios from \"../../../../Services/jwtAxios\";\r\nimport \"./NewDish.css\";\r\n\r\nfunction NewDish(): JSX.Element {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DishModel>();\r\n\r\n  const onSubmit = (data: DishModel) => {\r\n    const formData = new FormData();\r\n    formData.append(\"name\", data.name);\r\n    formData.append(\"description\", data.description);\r\n    formData.append(\"category\", data.category.toString());\r\n    formData.append(\"price\", data.price.toString());\r\n    formData.append(\"available\", data.available.toString());\r\n    formData.append(\"image1\", data.image1.item(0));\r\n    formData.append(\"image2\", data.image2.item(0));\r\n    jwtAxios\r\n      .post<DishModel>(globals.urls.localUrl + \"admin/addDish\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        alert(\"Dish added.\");\r\n      })\r\n      .catch((err) => {\r\n        errorAlert(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"NewDish\">\r\n      <h3>Add New Dish</h3>\r\n      <div className=\"FormDish\">\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control\r\n              {...register(\"name\", {\r\n                required: { value: true, message: \"please enter name\" },\r\n                minLength: {\r\n                  value: 5,\r\n                  message: \"please enter longer description\",\r\n                },\r\n              })}\r\n            />\r\n            <span>{errors.name?.message}</span>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>description:</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              {...register(\"description\", {\r\n                required: { value: true, message: \"please enter description\" },\r\n                minLength: {\r\n                  value: 25,\r\n                  message: \"please enter longer description\",\r\n                },\r\n              })}\r\n            />\r\n            <span>{errors.description?.message}</span>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Price:</Form.Label>\r\n            <Form.Control\r\n              {...register(\"price\", {\r\n                min: { value: 1, message: \"price too low\" },\r\n                required: { value: true, message: \"please enter price\" },\r\n              })}\r\n            />\r\n            <span>{errors.price?.message}</span>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Category:</Form.Label>\r\n            <Form.Control as=\"select\" {...register(\"category\")}>\r\n              <option value={CategoryEnum.DRINK}>Drink</option>\r\n              <option value={CategoryEnum.STARTER}>Starters</option>\r\n              <option value={CategoryEnum.SIDE_DISH}>Side dish</option>\r\n              <option value={CategoryEnum.SOUP}>Soup</option>\r\n              <option value={CategoryEnum.MAIN_COURSE}>Main course</option>\r\n              <option value={CategoryEnum.DESSERT}>Dessert</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"availableCheck\">\r\n            <Form.Check\r\n              type=\"checkbox\"\r\n              label=\"Available\"\r\n              {...register(\"available\")}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.File\r\n              id=\"ControlFile1\"\r\n              label=\"Choose primary image\"\r\n              {...register(\"image1\", {\r\n                required: { value: true, message: \"file was not selected\" },\r\n              })}\r\n            />\r\n            <span>{errors.image1?.message}</span>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.File\r\n              id=\"ControlFile2\"\r\n              label=\"Choose secondary image\"\r\n              {...register(\"image2\", {\r\n                required: { value: true, message: \"file was not selected\" },\r\n              })}\r\n            />\r\n            <span>{errors.image2?.message}</span>\r\n          </Form.Group>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewDish;\r\n","import \"./NewUser.css\";\nimport CustomerModel from \"../../../../Models/CustomerModel\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { errorAlert } from \"../../../../Services/errorService\";\nimport globals from \"../../../../Services/Globals\";\nimport { LevelEnum } from \"../../../../Models/Enums\";\nimport BranchModel from \"../../../../Models/BranchModel\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport jwtAxios from \"../../../../Services/jwtAxios\";\nfunction NewUser(): JSX.Element {\n  let [branches, setBranches] = useState<BranchModel[]>([]);\n  let [disableField, setDisableField] = useState(\"\")\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CustomerModel>();\n  const getBranches = () => {\n    jwtAxios\n      .get(globals.urls.localUrl + \"admin/getBranches\")\n      .then((response) => {\n        setBranches(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  useEffect(() => {\n    getBranches();\n  }, []);\n\nconst handleLevel = (e:ChangeEvent<HTMLInputElement>) => {\n  if (e.target.value === LevelEnum.CUSTOMER){\n    setDisableField(\"customer\")\n  } else if (e.target.value === LevelEnum.ADMIN) {\n     setDisableField(\"admin\");\n  } else {\n    setDisableField(\"\");\n  }\n}\n\n\n  const onSubmit = (data: CustomerModel) => {\n    if (data.level === LevelEnum.NONE){\n      alert(\"Choose Level\");\n      return\n    }\n    if (!data.branchId){\n      data.branchId=-1\n    }\n    jwtAxios\n      .post<CustomerModel>(globals.urls.localUrl + \"admin/addUser/\"+data.branchId, data)\n      .then((response) => {\n        console.log(response.data);\n        alert(\"User added.\");\n      })\n      .catch((err) => {\n        errorAlert(err);\n      });\n  };\n\n  return (\n    <div className=\"NewUser\">\n      <h3>Add New User</h3>\n      <div className=\"FormBranch\">\n        <Form onSubmit={handleSubmit(onSubmit)}>\n          <Form.Group>\n            <Form.Label>Name:</Form.Label>\n            <Form.Control\n              {...register(\"name\", {\n                required: { value: true, message: \"please enter name\" },\n                minLength: {\n                  value: 5,\n                  message: \"please enter longer name\",\n                }\n              })}\n            />\n            <span>{errors.name?.message}</span>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Address:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              disabled={disableField !== \"customer\"}\n              {...register(\"address\", {\n                required: { value: true, message: \"please enter address\" },\n                minLength: {\n                  value: 25,\n                  message: \"please enter longer address\",\n                },\n              })}\n            />\n            <span>{errors.address?.message}</span>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Phone:</Form.Label>\n            <Form.Control\n              disabled={disableField !== \"customer\"}\n              {...register(\"phone\", {\n                required: { value: true, message: \"please enter phone\" },\n                minLength: {\n                  value: 9,\n                  message: \"please enter longer phone number\",\n                },\n              })}\n            />\n            <span>{errors.phone?.message}</span>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Level:</Form.Label>\n            <Form.Control\n              as=\"select\"\n              {...register(\"level\", {\n                required: { value: true, message: \"please enter level\" },\n              })}\n              onChange={handleLevel}\n            >\n              <option value={LevelEnum.NONE}>--Choose one--</option>\n              <option value={LevelEnum.TABLE}>Table</option>\n              <option value={LevelEnum.CUSTOMER}>Customer</option>\n              <option value={LevelEnum.KITCHEN}>Kitchen</option>\n              <option value={LevelEnum.SERVICE}>Service</option>\n              <option value={LevelEnum.ADMIN}>Admin</option>\n            </Form.Control>\n            <span>{errors.phone?.message}</span>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Branch:</Form.Label>\n            <Form.Control name=\"branchId\" as=\"select\"\n               disabled={disableField === \"admin\"}\n               {...register(\"branchId\", {\n                required: { value: true, message: \"please enter branch\" },\n              })}>\n              {branches.map((branch) => {\n                return (\n                  <option key={branch.id} value={branch.id}>\n                    {branch.id}) {branch.name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Email:</Form.Label>\n            <Form.Control\n              type=\"email\"\n              {...register(\"email\", {\n                required: { value: true, message: \"please enter email\" },\n              })}\n            />\n            <span>{errors.email?.message}</span>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Password:</Form.Label>\n            <Form.Control\n              type=\"password\"\n              {...register(\"password\", {\n                required: { value: true, message: \"please enter password\" },\n              })}\n            />\n            <span>{errors.password?.message}</span>\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n        <br />\n      </div>\n    </div>\n  );\n}\n\nexport default NewUser;\n","import MenuOrderModel from \"./MenuOrderModel\";\r\n\r\nclass BranchModel {\r\n    public id:number;\r\n    public name:string;\r\n    public address:string;\r\n    public orders: MenuOrderModel[]\r\n}\r\n\r\nexport default BranchModel;","import BranchModel from \"../../../../Models/BranchModel\";\nimport \"./UpdateBranch.css\";\nimport { SyntheticEvent, useEffect, useRef, useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { errorAlert } from \"../../../../Services/errorService\";\nimport globals from \"../../../../Services/Globals\";\nimport jwtAxios from \"../../../../Services/jwtAxios\";\n\nfunction UpdateBranch(): JSX.Element {\n  let [branches, setBranches] = useState<BranchModel[]>([]);\n  let [fetchedBranch, setFetchedBranch] = useState<BranchModel>(null);\n  let formRef = useRef(null);\n  const handleFetch = () => {\n    const formData = new FormData(formRef.current);\n    const dishId = formData.get(\"updateDishId\");\n    jwtAxios\n      .get<BranchModel>(globals.urls.localUrl + \"admin/getBranch/\" + dishId)\n      .then((res) => {\n        console.log(res.data);\n        setFetchedBranch(res.data);\n      })\n      .catch((err) => {\n        alert(err);\n      });\n  };\n  const onSubmit = (e: SyntheticEvent) => {\n    e.preventDefault();\n    const formData = new FormData(formRef.current);\n    const newBranch = new BranchModel();\n    newBranch.id = fetchedBranch.id;\n    newBranch.name = formData.get(\"name\") as string;\n    newBranch.address = formData.get(\"address\") as string;\n    jwtAxios\n      .put<BranchModel>(globals.urls.localUrl + \"admin/updateBranch\", newBranch)\n      .then((res) => {\n        console.log(\"response \" + res.data);\n        getBranches();\n        alert(\"Branch Updated.\");\n      })\n      .catch((err) => {\n        errorAlert(err);\n      });\n  };\n\n  const getBranches = () => {\n    jwtAxios\n      .get(globals.urls.localUrl + \"admin/getBranches\")\n      .then((response) => {\n        setBranches(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  useEffect(() => {\n    getBranches();\n  }, []);\n\n  return (\n    <div className=\"UpdateBranch\">\n      <h3>Update Branch</h3>\n      <div className=\"FormDish\">\n        <Form ref={formRef} onSubmit={onSubmit}>\n          <Form.Group>\n            <Form.Label>Select dish:</Form.Label>\n            <Form.Control name=\"updateDishId\" as=\"select\">\n              {branches.map((branch) => {\n                return (\n                  <option key={branch.id} value={branch.id}>\n                    {branch.id}) {branch.name}\n                  </option>\n                );\n              })}\n            </Form.Control>\n          </Form.Group>\n          <Button type=\"button\" onClick={handleFetch}>\n            Fetch\n          </Button>\n          <Form.Group>\n            <Form.Label>Name:</Form.Label>\n            <Form.Control\n              defaultValue={fetchedBranch?.name}\n              name=\"name\"\n              required\n              minLength={4}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Address:</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              defaultValue={fetchedBranch?.address}\n              name=\"address\"\n              minLength={25}\n            />\n          </Form.Group>\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n        <br />\n      </div>\n    </div>\n  )\n}\n\nexport default UpdateBranch;\n","import { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport DishModel from \"../../../../Models/DishModel\";\r\nimport { CategoryEnum } from \"../../../../Models/Enums\";\r\nimport { errorAlert } from \"../../../../Services/errorService\";\r\nimport globals from \"../../../../Services/Globals\";\r\nimport jwtAxios from \"../../../../Services/jwtAxios\";\r\nimport \"./UpdateDish.css\";\r\n\r\nfunction UpdateDish(): JSX.Element {\r\n  let [dishes, setDishes] = useState<DishModel[]>([]);\r\n  let [fetchedDish, setFetchedDish] = useState<DishModel>(null);\r\n  const handleCategory = (e: SyntheticEvent) => {\r\n    let temp = { ...fetchedDish };\r\n    temp.category = (e.target as HTMLInputElement).value as CategoryEnum;\r\n    setFetchedDish(temp);\r\n  };\r\n\r\n  const handleCheck = () => {\r\n    console.log(fetchedDish.available);\r\n    let temp = { ...fetchedDish };\r\n    temp.available = !temp.available;\r\n    setFetchedDish(temp);\r\n  };\r\n  const handleFetch = () => {\r\n    const formData = new FormData(document.querySelector(\"#updateFormId\"));\r\n    const dishId = formData.get(\"updateDishId\");\r\n    jwtAxios\r\n      .get<DishModel>(globals.urls.localUrl + \"order/getDish/\" + dishId)\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        setFetchedDish(res.data);\r\n      })\r\n      .catch((err) => {\r\n        alert(err);\r\n      });\r\n  };\r\n  const onSubmit = (e: SyntheticEvent) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(document.querySelector(\"#updateFormId\"));\r\n    formData.set(\"id\", fetchedDish.id.toString());\r\n    jwtAxios\r\n      .put<DishModel>(globals.urls.localUrl + \"admin/updateDish\", formData, {\r\n        headers: {\"Content-Type\": \"multipart/form-data\" },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"response \" + res.data);\r\n        getMenu();\r\n        alert(\"Dish Updated.\");\r\n      })\r\n      .catch((err) => {\r\n        errorAlert(err);\r\n      });\r\n  };\r\n\r\n  const getMenu = () => {\r\n    jwtAxios\r\n      .get(globals.urls.localUrl + \"order/getMenu\")\r\n      .then((response) => {\r\n        setDishes(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMenu();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"UpdateDish\">\r\n      <h3>Update Dish</h3>\r\n      <div className=\"FormDish\">\r\n        <Form id=\"updateFormId\" onSubmit={onSubmit}>\r\n          <Form.Group>\r\n            <Form.Label>Select dish:</Form.Label>\r\n            <Form.Control name=\"updateDishId\" as=\"select\">\r\n              {dishes.map((dish) => {\r\n                return (\r\n                  <option key={dish.id} value={dish.id}>\r\n                    {dish.id}) {dish.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <Button type=\"button\" onClick={handleFetch}>\r\n            Fetch\r\n          </Button>\r\n          <Form.Group>\r\n            <Form.Label>Name:</Form.Label>\r\n            <Form.Control\r\n              defaultValue={fetchedDish?.name}\r\n              name=\"name\"\r\n              required\r\n              minLength={4}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>description:</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              defaultValue={fetchedDish?.description}\r\n              name=\"description\"\r\n              minLength={25}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Price:</Form.Label>\r\n            <Form.Control\r\n              defaultValue={fetchedDish?.price}\r\n              name=\"price\"\r\n              required\r\n              min=\"1\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"updateDishForm.category\">\r\n            <Form.Label>Category:</Form.Label>\r\n            <Form.Control\r\n              value={fetchedDish?.category}\r\n              onChange={handleCategory}\r\n              as=\"select\"\r\n              name=\"category\"\r\n            >\r\n              <option value={CategoryEnum.DRINK}>Drink</option>\r\n              <option value={CategoryEnum.STARTER}>Starters</option>\r\n              <option value={CategoryEnum.SIDE_DISH}>Side dish</option>\r\n              <option value={CategoryEnum.SOUP}>Soup</option>\r\n              <option value={CategoryEnum.MAIN_COURSE}>Main course</option>\r\n              <option value={CategoryEnum.DESSERT}>Dessert</option>\r\n            </Form.Control>\r\n          </Form.Group>\r\n          <div className=\"FlexDiv\">\r\n            <div>\r\n              <Form.Group controlId=\"availableCheck\">\r\n                <Form.Check\r\n                  type=\"checkbox\"\r\n                  label=\"Available\"\r\n                  value=\"on\"\r\n                  name=\"available\"\r\n                  checked={fetchedDish?.available}\r\n                  onChange={handleCheck}\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.File\r\n                  id=\"ControlFile1\"\r\n                  label=\"Choose primary image\"\r\n                  name=\"image1\"\r\n                />\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <Form.File\r\n                  id=\"ControlFile2\"\r\n                  label=\"Choose secondary image\"\r\n                  name=\"image2\"\r\n                />\r\n              </Form.Group>\r\n            </div>\r\n            <div>\r\n              <img src={fetchedDish?.primaryImage} alt=\"primary\" />\r\n            </div>\r\n            <div>\r\n              <img src={fetchedDish?.secondaryImage} alt=\"secondary\" />\r\n            </div>\r\n          </div>\r\n          <Button type=\"submit\">Submit</Button>\r\n        </Form>\r\n        <br />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateDish;\r\n","import \"./UpdateUser.css\";\nimport CustomerModel from \"../../../../Models/CustomerModel\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useForm } from \"react-hook-form\";\nimport { errorAlert } from \"../../../../Services/errorService\";\nimport globals from \"../../../../Services/Globals\";\nimport { LevelEnum } from \"../../../../Models/Enums\";\nimport BranchModel from \"../../../../Models/BranchModel\";\nimport { ChangeEvent, useEffect, useState } from \"react\";\nimport UserModel from \"../../../../Models/UserModel\";\nimport jwtAxios from \"../../../../Services/jwtAxios\";\nfunction UpdateUser(): JSX.Element {\n    let [users, setUsers] = useState<UserModel[]>([]);\n    let [branches, setBranches] = useState<BranchModel[]>([]);\n    let [disableField, setDisableField] = useState(\"\")\n    const {\n      register,\n      handleSubmit,\n      formState: { errors }, setValue\n    } = useForm<CustomerModel>();\n    const getBranches = () => {\n      jwtAxios\n        .get(globals.urls.localUrl + \"admin/getBranches\")\n        .then((response) => {\n          setBranches(response.data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    };\n  \n    useEffect(() => {\n      getBranches();\n    }, []);\n    \n  const handleLevel = (e:ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value === LevelEnum.CUSTOMER){\n      setDisableField(\"customer\")\n    } else if (e.target.value === LevelEnum.ADMIN) {\n       setDisableField(\"admin\");\n    } else {\n      setDisableField(\"\");\n    }\n  }\n\n  const handleUser = (e:ChangeEvent<HTMLInputElement>) => {\n    console.log(e.target.value);\n    if (e.target.value === \"-1\"){\n      setValue(\"name\",\"\");\n      setValue(\"address\",\"\");\n      setValue(\"phone\",\"\");\n      setValue(\"level\",LevelEnum.NONE);\n      setValue(\"email\",\"\");\n      setValue(\"branchId\",-1);\n      setValue(\"password\",\"\");\n      return\n    }\n    const user = users.find(currentUser => currentUser.id === parseInt(e.target.value))\n    setValue(\"level\",user.level);\n    setValue(\"name\",user.name);\n    setValue(\"address\",user.address);\n    setValue(\"phone\",user.phone);\n    setValue(\"level\",user.level);\n    setValue(\"email\",user.email);\n    const branch = branches.find(currentBranch => currentBranch?.id === user.branch?.id)\n    setValue(\"branchId\",branch?.id);\n    if (user.level === LevelEnum.CUSTOMER){\n      setValue(\"address\",\" \");\n      setValue(\"phone\",\" \");\n      setDisableField(\"customer\")\n    } else if (user.level === LevelEnum.ADMIN) {\n       setValue(\"address\",\" \");\n       setValue(\"phone\",\" \");\n       setValue(\"branchId\",-1);\n       setDisableField(\"admin\");\n    } else {\n      setDisableField(\"\");\n    }\n  }\n  \n  const getUsers = () => {\n    jwtAxios\n      .get(globals.urls.localUrl + \"admin/getUsers\")\n      .then((response) => {\n        setUsers(response.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  \n  useEffect(() => {\n    getUsers();\n  },[]);\n\n    const onSubmit = (data: CustomerModel) => {\n      if (data.level === LevelEnum.NONE){\n        alert(\"Choose Level\");\n        return\n      }\n      console.log(data.id)\n      if (data.id.toString() === \"-1\"){\n        alert(\"Choose User\");\n        return\n      }\n      if (!data.branchId){\n        data.branchId=-1\n      }\n      jwtAxios\n        .put<CustomerModel>(globals.urls.localUrl + \"admin/updateUser/\"+data.branchId, data)\n        .then((response) => {\n          console.log(response.data);\n          alert(\"User updated.\");\n        })\n        .catch((err) => {\n          errorAlert(err);\n        });\n    };\n    return (\n      <div className=\"NewUser\">\n        <h3>Update User</h3>\n        <div className=\"FormBranch\">\n        <Form.Group>\n          <Form.Label>Select user:</Form.Label>\n          <Form.Control \n          {...register(\"id\")}\n          name=\"id\" as=\"select\" onChange={handleUser}>\n            <option key={-1} value={-1}>--choose one--</option>\n            {users.map((user) => {\n              return (\n                <option key={user.id} value={user.id}>\n                  {user.id}) {user.name}\n                </option>\n              );\n            })}\n          </Form.Control>\n        </Form.Group>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Form.Group>\n              <Form.Label>Name:</Form.Label>\n              <Form.Control\n                {...register(\"name\", {\n                  required: { value: true, message: \"please enter name\" },\n                  minLength: {\n                    value: 5,\n                    message: \"please enter longer name\",\n                  }\n                })}\n              />\n              <span>{errors.name?.message}</span>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Address:</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                disabled={disableField !== \"customer\"}\n                {...register(\"address\", {\n                  required: { value: disableField === \"customer\", message: \"please enter address\" },\n                  minLength: {value: disableField === \"customer\"?20:0,message: \"please enter longer address\"},\n                })}\n              />\n              <span>{errors.address?.message}</span>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Phone:</Form.Label>\n              <Form.Control\n                disabled={disableField !== \"customer\"}\n                {...register(\"phone\", {\n                  required: { value: disableField === \"customer\", message: \"please enter phone\" },\n                  minLength: {value: disableField === \"customer\"?9:0,message: \"please enter longer phone number\"},\n                })}\n              />\n              <span>{errors.phone?.message}</span>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Level:</Form.Label>\n              <Form.Control\n                as=\"select\"\n                {...register(\"level\", {\n                  required: { value: true, message: \"please enter level\" },\n                })}\n                onChange={handleLevel}\n              >\n                <option value={LevelEnum.NONE}>--Choose one--</option>\n                <option value={LevelEnum.TABLE}>Table</option>\n                <option value={LevelEnum.CUSTOMER}>Customer</option>\n                <option value={LevelEnum.KITCHEN}>Kitchen</option>\n                <option value={LevelEnum.SERVICE}>Service</option>\n                <option value={LevelEnum.ADMIN}>Admin</option>\n              </Form.Control>\n              <span>{errors.level?.message}</span>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Branch:</Form.Label>\n              <Form.Control name=\"branchId\" as=\"select\"\n                 disabled={disableField === \"admin\"}\n                 {...register(\"branchId\", {\n                 required: { value: disableField !== \"admin\", message: \"please enter branch\" },\n                })}>\n                <option key={-1} value={-1}>--choose one--</option>\n                {branches.map((branch) => {\n                  return (\n                    <option key={branch.id} value={branch.id}>\n                      {branch.id}) {branch.name}\n                    </option>\n                  );\n                })}\n              </Form.Control>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Email:</Form.Label>\n              <Form.Control\n                type=\"email\"\n                {...register(\"email\", {\n                  required: { value: true, message: \"please enter email\" },\n                })}\n              />\n              <span>{errors.email?.message}</span>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password:</Form.Label>\n              <Form.Control\n                type=\"password\"\n                {...register(\"password\", {\n                  required: { value: true, message: \"please enter password\" },\n                })}\n              />\n              <span>{errors.password?.message}</span>\n            </Form.Group>\n            <Button type=\"submit\">Submit</Button>\n          </Form>\n          <br />\n        </div>\n      </div>\n    );\n}\n\nexport default UpdateUser;\n","import { useState } from \"react\";\r\nimport { Button, Nav } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./AdminMenu.css\";\r\n\r\nfunction AdminMenu(): JSX.Element {\r\n  const [showSide, setShowSide] = useState(\"\");\r\n  const toggleSide = () =>{\r\n    if (showSide === \" ShowSide\"){\r\n      setShowSide(\"\"); \r\n    } else{\r\n      setShowSide(\" ShowSide\");\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className=\"AdminMenu\">\r\n        <Button onClick={toggleSide}>Menu</Button><br/><br/>\r\n        <Nav className={\"col-md-12 d-none d-md-block Sidebar\"+ showSide}>\r\n          <h6>ORDERS</h6>\r\n          <Nav.Item>\r\n            <NavLink  to=\"/display\">\r\n              open orders\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink\r\n              to=\"/ready\"\r\n            >\r\n              ready orders\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/served\">\r\n              served orders\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/paid\">\r\n              closed orders\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <br />\r\n          <h6>BRANCHES</h6>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/newBranch\">\r\n              Add new branch\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/updateBranch\">\r\n              Update a branch\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/deleteBranch\">\r\n              Delete a branch\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <br />\r\n          <h6>MENU</h6>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/newDish\">\r\n              Add new dish\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/updateDish\">\r\n              Update a dish\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/deleteDish\">\r\n              Delete a dish\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <br />\r\n          <h6>USERS</h6>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/newUser\">\r\n              Add new user\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/updateUser\">\r\n              Update a user\r\n            </NavLink>\r\n          </Nav.Item>\r\n          <Nav.Item>\r\n            <NavLink to=\"/admin/deleteUser\">\r\n              Delete a user\r\n            </NavLink>\r\n          </Nav.Item>\r\n        </Nav>\r\n        </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminMenu;\r\n","import \"./Admin.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport DeleteBranch from \"../DeleteBranch/DeleteBranch\";\nimport DeleteDish from \"../DeleteDish/DeleteDish\";\nimport DeleteUser from \"../DeleteUser/DeleteUser\";\nimport NewBranch from \"../NewBranch/NewBranch\";\nimport NewDish from \"../NewDish/NewDish\";\nimport NewUser from \"../NewUser/NewUser\";\nimport UpdateBranch from \"../UpdateBranch/UpdateBranch\";\nimport UpdateDish from \"../UpdateDish/UpdateDish\";\nimport UpdateUser from \"../UpdateUser/UpdateUser\";\nimport AdminMenu from \"../AdminMenu/AdminMenu\";\nfunction Admin(): JSX.Element {\n  return (\n    <div className=\"Admin\">\n      <h3 style={{ textAlign: \"center\" }}>Admin control panel</h3>\n      <AdminMenu />\n      <div className=\"AdminMain\">\n      <Switch>\n        <Route path=\"/admin/newDish\" component={NewDish} exact />\n        <Route path=\"/admin/updateDish\" component={UpdateDish} exact />\n        <Route path=\"/admin/deleteDish\" component={DeleteDish} exact />\n        <Route path=\"/admin/newBranch\" component={NewBranch} exact />\n        <Route path=\"/admin/updateBranch\" component={UpdateBranch} exact />\n        <Route path=\"/admin/deleteBranch\" component={DeleteBranch} exact />\n        <Route path=\"/admin/newUser\" component={NewUser} exact />\n        <Route path=\"/admin/updateUser\" component={UpdateUser} exact />\n        <Route path=\"/admin/deleteUser\" component={DeleteUser} exact />\n      </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default Admin;\n","import { Button, Form } from \"react-bootstrap\";\r\nimport \"./Login.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport axios from \"axios\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport CustomerModel from \"../../../Models/CustomerModel\";\r\nimport store from \"../../../Redux/Store\";\r\nimport { setAuthAction } from \"../../../Redux/AuthState\";\r\nimport { LevelEnum } from \"../../../Models/Enums\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport { errorAlert } from \"../../../Services/errorService\";\r\nfunction Login(): JSX.Element {\r\n  interface IFormInput {\r\n    email: string;\r\n    password: string;\r\n  }\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<IFormInput>();\r\n\r\n  const switchLevel = (level: LevelEnum) => {\r\n    switch (level) {\r\n      case LevelEnum.KITCHEN:\r\n        history.push(\"/display\");\r\n        break;\r\n      case LevelEnum.TABLE:\r\n        history.push(\"/makeOrder\");\r\n        break;\r\n      case LevelEnum.ADMIN:\r\n        history.push(\"/admin\");\r\n        break;\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (store.getState().AuthState.auth.level !== LevelEnum.NONE) {\r\n      switchLevel(store.getState().AuthState.auth.level);\r\n    }\r\n  });\r\n  const handleLogin = (loginDetails: IFormInput) => {\r\n    axios\r\n      .post<CustomerModel>(globals.urls.localUrl + \"auth/signIn\", loginDetails)\r\n      .then((response) => {\r\n        store.dispatch(setAuthAction(response.data));\r\n        switchLevel(response.data.level);\r\n      })\r\n      .catch((err) => {\r\n        errorAlert(err);\r\n      });\r\n  };\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <div className=\"Login Box\">\r\n      <h3 className=\"H3\">Login</h3>\r\n      <div className=\"FormDiv\">\r\n        <Form onSubmit={handleSubmit(handleLogin)}>\r\n          <Form.Group>\r\n            <Form.Label>Email:</Form.Label>\r\n            <Form.Control\r\n              {...register(\"email\", {\r\n                required: { value: true, message: \"Email missing\" },\r\n                pattern: {\r\n                  value: /^[\\w-.]+@([\\w-]+.)+[\\w-]{2,4}$/g,\r\n                  message: \"Email is invalid\",\r\n                },\r\n              })}\r\n            />\r\n            {errors.email && errors.email.message}\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Password:</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              {...register(\"password\", {\r\n                required: { value: true, message: \"Password missing\" },\r\n                minLength: { value: 3, message: \"Too short\" },\r\n              })}\r\n            />\r\n            {errors.password && errors.password.message}\r\n          </Form.Group>\r\n          <Button type=\"submit\" className=\"FormButton\">\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport { Card, CardGroup } from \"react-bootstrap\";\r\nimport DishModel from \"../../../Models/DishModel\";\r\nimport \"./DishCard.css\";\r\ninterface DcProps {\r\n  dish: DishModel;\r\n  selected: Function;\r\n}\r\nfunction DishCard(props: DcProps): JSX.Element {\r\n  let [classMod, setClassMod] = useState(\"DishCard\");\r\n  const handleSelectDish = () => {\r\n    props.selected(props.dish);\r\n  };\r\n  const handleDown = () => {\r\n    setClassMod(\"DishCard Clicked hovered\");\r\n  };\r\n  const handleUp = () => {\r\n    setClassMod(\"DishCard\");\r\n  };\r\n\r\n  const handleEnter = () => {\r\n    setClassMod(\"DishCard Hovered\");\r\n  };\r\n  // console.log(props.dish.name);\r\n  return (\r\n    <div\r\n      onClick={handleSelectDish}\r\n      className={classMod}\r\n      onMouseDown={handleDown}\r\n      onMouseEnter={handleEnter}\r\n      onMouseUp={handleUp}\r\n      onMouseLeave={handleUp}\r\n    >\r\n      <CardGroup style={{ border: \"1px solid lightgrey\", margin: \"7px\" }}>\r\n        <Card.Img\r\n          style={{\r\n            width: \"10rem\",\r\n            height: \"10rem\",\r\n          }}\r\n          variant=\"top\"\r\n          src={props.dish.secondaryImage}\r\n        />\r\n        <Card\r\n          style={{\r\n            maxWidth: \"25rem\",\r\n            height: \"10rem\",\r\n            border: \"none\",\r\n          }}\r\n        >\r\n          <Card.Body>\r\n            <Card.Title>\r\n              {props.dish.id}) {props.dish.name}\r\n            </Card.Title>\r\n            <Card.Text>\r\n              {props.dish.description}\r\n              <br />\r\n              {props.dish.price} ฿\r\n            </Card.Text>\r\n          </Card.Body>\r\n        </Card>\r\n      </CardGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DishCard;\r\n","\r\nclass EntryPayload {\r\n    public dishId:number=0;\r\n\tpublic quantity:number=0;\r\n}\r\n\r\nexport default EntryPayload;","import EntryPayload from './EntryPayload';\r\nimport { OrderType } from './Enums';\r\n\r\nclass OrderPayload {\r\n    public orderType:OrderType=OrderType.NONE;\r\n    public note:string=\"\";\r\n    public entries:EntryPayload[] = [];\r\n}\r\n\r\nexport default OrderPayload;","import \"./MakeOrder.css\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button, Form, Tab, Table, Tabs } from \"react-bootstrap\";\r\nimport { useEffect, useState } from \"react\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport DishModel from \"../../../Models/DishModel\";\r\nimport DishCard from \"../DishCard/DishCard\";\r\nimport EntryPayload from \"../../../Models/EntryPayload\";\r\nimport OrderPayload from \"../../../Models/OrderPayload\";\r\nimport { OrderType } from \"../../../Models/Enums\";\r\nimport store from \"../../../Redux/Store\";\r\nimport { useHistory } from \"react-router\";\r\nimport { errorAlert } from \"../../../Services/errorService\";\r\nimport jwtAxios from \"../../../Services/jwtAxios\";\r\n\r\nfunction MakeOrder(): JSX.Element {\r\n  let [dishes, setDishes] = useState<DishModel[]>([]);\r\n  let [selectedDishes, setSelectedDishes] = useState<EntryPayload[]>([]);\r\n  let [key, setKey] = useState(\"DRINK\");\r\n  let [up, setUp] = useState(0);\r\n  const history = useHistory();\r\n  const handleSelectedDish = (dish: DishModel) => {\r\n    let temp = [...selectedDishes];\r\n    let currEntry = new EntryPayload();\r\n    currEntry.dishId = dish.id;\r\n    let i = 0;\r\n    for (; i < temp.length; i++) {\r\n      if (temp[i].dishId === dish.id) {\r\n        temp[i].quantity++;\r\n        break;\r\n      }\r\n    }\r\n    if (i === temp.length) {\r\n      currEntry.quantity = 1;\r\n      temp.push(currEntry);\r\n    }\r\n    setSelectedDishes(temp);\r\n    console.log(selectedDishes);\r\n    setUp(up + 1);\r\n  };\r\n  const handleCheckout = () => {\r\n    setKey(\"yourOrder\");\r\n  };\r\n  const handleCancel = (dish: EntryPayload) => {\r\n    let temp = [...selectedDishes];\r\n    for (let i = 0; i < temp.length; i++) {\r\n      if (temp[i].dishId === dish.dishId && temp[i].quantity > 0) {\r\n        temp[i].quantity--;\r\n        if (temp[i].quantity === 0) {\r\n          temp.splice(i, 1);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    setSelectedDishes(temp);\r\n    setUp(up + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!store.getState().AuthState.auth.token) {\r\n      history.push(\"/login\");\r\n    }\r\n    jwtAxios\r\n      .get(globals.urls.localUrl + \"order/getMenu\")\r\n      .then((response) => {\r\n        setDishes(response.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, [history]);\r\n\r\n  const { register, handleSubmit } = useForm();\r\n  interface IFormInput {\r\n    note: string;\r\n    orderType: string;\r\n  }\r\n\r\n  const confirmOrder = (data: IFormInput) => {\r\n    const order: OrderPayload = new OrderPayload();\r\n    if (data.orderType) {\r\n      order.orderType = OrderType.PICKUP;\r\n    } else {\r\n      order.orderType = OrderType.TABLE;\r\n    }\r\n    order.note = data.note;\r\n    order.entries = selectedDishes;\r\n    jwtAxios\r\n      .post<OrderPayload>(globals.urls.localUrl + \"order/makeOrder\", order)\r\n      .then(() => {\r\n        setSelectedDishes([]);\r\n        alert(\"Order Sent.\");\r\n      })\r\n      .catch((err) => {\r\n        setSelectedDishes([]);\r\n        errorAlert(err);\r\n      });\r\n  };\r\n\r\n  const menuTab = (cat: string, title: string): JSX.Element => {\r\n    return (\r\n      <Tab eventKey={cat} title={title}>\r\n        <div className=\"CardsWrapper\">\r\n          {dishes\r\n            .filter((dish) => dish.category === cat)\r\n            .map((dish, index) => (\r\n              <DishCard key={index} dish={dish} selected={handleSelectedDish} />\r\n            ))}\r\n        </div>\r\n      </Tab>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"MakeOrder\">\r\n      <img alt=\"salad\" className=\"BackImg\" src = \"https://i.ibb.co/0BRfdw5/salad2.jpg\"/>\r\n      <Tabs\r\n        id=\"controlled-tab-example\"\r\n        activeKey={key}\r\n        onSelect={(k) => setKey(k)}\r\n      >\r\n        {menuTab(\"DRINK\", \"Drink\")}\r\n        {menuTab(\"MAIN_COURSE\", \"Main course\")}\r\n        {menuTab(\"STARTER\", \"Starters\")}\r\n        {menuTab(\"DESSERT\", \"Dessert\")}\r\n        {menuTab(\"SOUP\", \"Soup\")}\r\n        {menuTab(\"SIDE_DISH\", \"Side dish\")}\r\n        {selectedDishes.length !== 0 && (\r\n          <Tab eventKey=\"yourOrder\" title=\"Your Order\">\r\n            <div className=\"TabWrapper\">\r\n              <div className=\"OrderBox Box\">\r\n                <Table>\r\n                  <tr key={-1}>\r\n                    <th>Course</th>\r\n                    <th style={{ textAlign: \"center\" }}>Quantity</th>\r\n                    <th style={{ textAlign: \"center\" }}>Cancel</th>\r\n                  </tr>\r\n                  {selectedDishes.map((dish, index) => {\r\n                    const currDish = dishes.find(\r\n                      (menuDish) => menuDish.id === dish.dishId\r\n                    );\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td>\r\n                          #{dish.dishId} {currDish.name}\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          {\" \"}\r\n                          {dish.quantity}\r\n                        </td>\r\n                        <td style={{ textAlign: \"center\" }}>\r\n                          <Button\r\n                            onClick={() => handleCancel(dish)}\r\n                            variant=\"danger\"\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </Table>\r\n                <Form\r\n                  className=\"FormWrapper\"\r\n                  onSubmit={handleSubmit(confirmOrder)}\r\n                >\r\n                  <Form.Group controlId=\"formBasicNote\">\r\n                    <Form.Label>Note: </Form.Label>\r\n                    <Form.Control\r\n                      as=\"textarea\"\r\n                      name=\"note\"\r\n                      {...register(\"note\")}\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group\r\n                    style={{ padding: \"5px\" }}\r\n                    controlId=\"formBasicCheckbox\"\r\n                  >\r\n                    <Form.Check\r\n                      name=\"orderType\"\r\n                      type=\"checkbox\"\r\n                      label=\"Take away\"\r\n                      {...register(\"orderType\")}\r\n                    />\r\n                  </Form.Group>\r\n                  <Button style={{ margin: \"5px\" }} type=\"submit\">\r\n                    Confirm order\r\n                  </Button>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </Tab>\r\n        )}\r\n      </Tabs>\r\n      <div className=\"ButtonWrapper\">\r\n        <Button\r\n          onClick={handleCheckout}\r\n          className={\r\n            key === \"yourOrder\" || selectedDishes.length === 0 ? \"Hidden\" : \"\"\r\n          }\r\n        >\r\n          CHECKOUT\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MakeOrder;\r\n","import { useState } from \"react\";\r\nimport { Alert, Card, ListGroup } from \"react-bootstrap\";\r\nimport MenuEntryModel from \"../../../Models/MenuEntryModel\";\r\nimport MenuOrderModel from \"../../../Models/MenuOrderModel\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport jwtAxios from \"../../../Services/jwtAxios\";\r\nimport \"./SingleOrder.css\";\r\n\r\ninterface MoProps {\r\n  order: MenuOrderModel;\r\n  getOrders: Function;\r\n  token: string;\r\n}\r\nfunction SingleOrder(props: MoProps): JSX.Element {\r\n  let myDate = new Date(props.order.time);\r\n  const [updatePage, setUpdatePage] = useState(0);\r\n\r\n  const handleOrderReady = () => {\r\n    if (props.order.entries.length === updatePage) {\r\n      jwtAxios\r\n        .post(\r\n          globals.urls.localUrl +\r\n            \"display/updateOrderStatus/\" +\r\n            props.order.id +\r\n            \"/READY\",{})\r\n        .then(() => {\r\n          props.getOrders();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n\r\n  const handleUpdateEntry = (entry: MenuEntryModel) => {\r\n    if (entry.ready) {\r\n      entry.ready = null;\r\n      jwtAxios\r\n        .post(\r\n          globals.urls.localUrl + \"display/updateEntryStatus/\" + entry.id,{})\r\n        .then(() => {\r\n          setUpdatePage(updatePage - 1);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    } else {\r\n      entry.ready = new Date();\r\n      jwtAxios\r\n        .post(\r\n          globals.urls.localUrl + \"display/updateEntryStatus/\" + entry.id,{})\r\n        .then(() => {\r\n          setUpdatePage(updatePage + 1);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"MenuOrder\">\r\n      <Card>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item key={1}>\r\n            <Alert\r\n              onClick={handleOrderReady}\r\n              variant={\r\n                props.order.entries.length === updatePage ? \"success\" : \"light\"\r\n              }\r\n            >\r\n              ID: {props.order.id} Time: {myDate.getHours()} :{\" \"}\r\n              {myDate.getMinutes()}\r\n            </Alert>\r\n          </ListGroup.Item>\r\n          <ListGroup.Item key={2}>\r\n            <div\r\n              style={\r\n                props.order.orderType === \"TABLE\"\r\n                  ? { backgroundColor: \"cadetblue\" }\r\n                  : { backgroundColor: \"greenyellow\" }\r\n              }\r\n            >\r\n              {props.order.orderType}\r\n            </div>\r\n            <span>Name: {props.order.user.name}</span> <br />\r\n            Note: {props.order.note}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item key={3}>\r\n            {props.order.entries.map((entry, index) => {\r\n              return (\r\n                <div key={index} className=\"EntryDiv\">\r\n                  <Alert\r\n                    onClick={() => handleUpdateEntry(entry)}\r\n                    variant={entry.ready !== null ? \"primary\" : \"light\"}\r\n                  >\r\n                    {index + 1}) {entry.dish.name} Qty: {entry.quantity}\r\n                  </Alert>\r\n                </div>\r\n              );\r\n            })}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleOrder;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MenuOrderModel from \"../../../Models/MenuOrderModel\";\r\nimport store from \"../../../Redux/Store\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport jwtAxios from \"../../../Services/jwtAxios\";\r\nimport SingleOrder from \"../SingleOrder/SingleOrder\";\r\nimport \"./OrderDisplay.css\";\r\n\r\nfunction OrderDisplay(): JSX.Element {\r\n  let [token, setToken] = useState(store.getState().AuthState.auth.token);\r\n  let [orders, setOrders] = useState<MenuOrderModel[]>([]);\r\n  const history = useHistory();\r\n  const getOrders = () =>\r\n    jwtAxios\r\n        .get<MenuOrderModel[]>(\r\n          globals.urls.localUrl + \"display/getOrdersByStatus/ORDERED\")\r\n        .then(function (response) {\r\n          setOrders(response.data);\r\n        })\r\n        .catch(function (error) {});\r\n  useEffect(() => {\r\n    setToken(store.getState().AuthState.auth.token);\r\n    if (!store.getState().AuthState.auth.token) {\r\n      history.push(\"/login\");\r\n    }\r\n    let refreshOrders = setInterval(() => {\r\n      getOrders();\r\n    }, 5000);\r\n    return () => {\r\n      clearInterval(refreshOrders);\r\n    };\r\n  }, [history]);\r\n  return (\r\n    <div className=\"OrderDisplay\">\r\n      {orders &&\r\n        orders.map((order, index) => (\r\n          <SingleOrder\r\n            key={index}\r\n            order={order}\r\n            getOrders={getOrders}\r\n            token={token}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderDisplay;\r\n","import MenuOrderModel from \"./MenuOrderModel\";\r\n\r\nclass OrdersByDates {\r\n    date:Date = new Date();\r\n    orders:MenuOrderModel[]=[];\r\n}\r\n\r\nexport default OrdersByDates;","import \"./PaidOrders.css\";\r\nimport React, { SyntheticEvent, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MenuOrderModel from \"../../../Models/MenuOrderModel\";\r\nimport store from \"../../../Redux/Store\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\nimport { StatusEnum } from \"../../../Models/Enums\";\r\nimport OrdersByDates from \"../../../Models/OrdersByDates\";\r\nimport jwtAxios from \"../../../Services/jwtAxios\";\r\nfunction PaidOrders(): JSX.Element {\r\n  let [orders, setOrders] = useState<MenuOrderModel[]>([]);\r\n  let [showDates, setShowDates] = useState([]);\r\n  let [showOrders, setShowOrders] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleClickDates = (e: SyntheticEvent, indexDate: number) => {\r\n    if (showDates.indexOf(indexDate) > -1) {\r\n      let temp = [...showDates];\r\n      temp.splice(showDates.indexOf(indexDate), 1);\r\n      setShowDates(temp);\r\n    } else {\r\n      let temp = [...showDates];\r\n      temp.push(indexDate);\r\n      setShowDates(temp);\r\n    }\r\n  };\r\n\r\n  const handleClickOrders = (e: SyntheticEvent, orderId: number) => {\r\n    if (showOrders.indexOf(orderId) === -1) {\r\n      let temp = [...showOrders];\r\n      temp.push(orderId);\r\n      setShowOrders(temp);\r\n    } else {\r\n      let temp = [...showOrders];\r\n      temp.splice(showOrders.indexOf(orderId), 1);\r\n      setShowOrders(temp);\r\n    }\r\n  };\r\n\r\n  const getOrders = () =>\r\n    jwtAxios\r\n        .get<MenuOrderModel[]>(\r\n          globals.urls.localUrl + \"display/getOrdersByStatus/PAID\")\r\n        .then((response) => {\r\n          setOrders(response.data);\r\n        })\r\n        .catch(function (error) {});\r\n\r\n  const calculateTotal = (order: MenuOrderModel): number => {\r\n    let total = 0;\r\n    order.entries.map((entry) => {\r\n      total += entry.dish.price * entry.quantity;\r\n      return null;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!store.getState().AuthState.auth.token) {\r\n      history.push(\"/login\");\r\n    }\r\n    getOrders();\r\n  }, [history]);\r\n\r\n  const arrangeOrdersByDate = (): JSX.Element => {\r\n    let orderList: OrdersByDates[] = [];\r\n    for (let i = 0; i < orders.length; i++) {\r\n      const orderTime = new Date(orders[i].time);\r\n      if (orders[i].status === StatusEnum.PAID) {\r\n        let orderDate = new Date(\r\n          orderTime.getFullYear(),\r\n          orderTime.getMonth(),\r\n          orderTime.getDate()\r\n        );\r\n        if (\r\n          orderList.length > 0 &&\r\n          orderList[orderList.length - 1].date.getTime() === orderDate.getTime()\r\n        ) {\r\n          orderList[orderList.length - 1].orders.push(orders[i]);\r\n        } else {\r\n          let curr = new OrdersByDates();\r\n          curr.date = orderDate;\r\n          curr.orders.push(orders[i]);\r\n          orderList.push(curr);\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <ListGroup>\r\n        {orderList.map((dateDiv, indexDate) => {\r\n          let dateGroup = <></>;\r\n          if (showDates.indexOf(indexDate) > -1) {\r\n            dateGroup = (\r\n              <div className=\"MarginTop\">\r\n                <ListGroup>\r\n                  {dateDiv.orders.map((order, indexOrder) => {\r\n                    let orderGroup = <div></div>;\r\n                    if (showOrders.indexOf(order.id) > -1) {\r\n                      orderGroup = (\r\n                        <div className=\"MarginTop\">\r\n                          <ListGroup>\r\n                            {order.entries.map((entry, indexEntry) => {\r\n                              return (\r\n                                <ListGroup.Item key={indexEntry}>\r\n                                  {entry.dish.name} | {entry.quantity}\r\n                                </ListGroup.Item>\r\n                              );\r\n                            })}\r\n                          </ListGroup>\r\n                        </div>\r\n                      );\r\n                    }\r\n                    const currDate = new Date(order.time);\r\n                    return (\r\n                      <ListGroup.Item key={indexOrder}>\r\n                        <div\r\n                          onClick={(event) =>\r\n                            handleClickOrders(event, order.id)\r\n                          }\r\n                        >\r\n                          ID: {order.id} | Customer: {order.user.name} | Date:{\" \"}\r\n                          {currDate.getDate()}/{currDate.getMonth()}/\r\n                          {currDate.getFullYear()} | Type: {order.orderType} |{\" \"}\r\n                          Note: {order.note} | Total: {calculateTotal(order)}\r\n                        </div>\r\n                        {orderGroup}\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })}\r\n                </ListGroup>\r\n              </div>\r\n            );\r\n          }\r\n          return (\r\n            <ListGroup.Item key={indexDate}>\r\n              <div onClick={(event) => handleClickDates(event, indexDate)}>\r\n                {dateDiv.date.getDate()}/{dateDiv.date.getMonth()}/\r\n                {dateDiv.date.getFullYear()}\r\n              </div>\r\n              {dateGroup}\r\n            </ListGroup.Item>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    );\r\n  };\r\n  return <div className=\"PaidOrders\">{orders && arrangeOrdersByDate()}</div>;\r\n}\r\n\r\nexport default PaidOrders;\r\n","import \"./ReadyOrders.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MenuOrderModel from \"../../../Models/MenuOrderModel\";\r\nimport store from \"../../../Redux/Store\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport { Alert, Card, ListGroup } from \"react-bootstrap\";\r\nimport jwtAxios from \"../../../Services/jwtAxios\";\r\n\r\nfunction ReadyOrders(): JSX.Element {\r\n  let [orders, setOrders] = useState<MenuOrderModel[]>([]);\r\n  const history = useHistory();\r\n\r\n  const handleOrderServed = (id: number) => {\r\n    jwtAxios\r\n      .post(\r\n        globals.urls.localUrl + \"display/updateOrderStatus/\" + id + \"/SERVED\")\r\n      .then(() => {\r\n        getOrders();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getOrders = () =>\r\n    jwtAxios\r\n        .get<MenuOrderModel[]>(\r\n          globals.urls.localUrl + \"display/getOrdersByStatus/READY\")\r\n        .then(function (response) {\r\n          setOrders(response.data);\r\n        })\r\n        .catch(function (error) {});\r\n\r\n  useEffect(() => {\r\n    if (!store.getState().AuthState.auth.token) {\r\n      history.push(\"/login\");\r\n    }\r\n    getOrders();\r\n  }, [history]);\r\n  return (\r\n    <div className=\"ReadyOrders\">\r\n      {orders &&\r\n        orders.map((order, index) => {\r\n          let myDate = new Date(order.time);\r\n          return (\r\n            <div key={index} className=\"ReadyOrderDiv\">\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item key={1}>\r\n                    <Alert\r\n                      onClick={() => handleOrderServed(order.id)}\r\n                      variant=\"success\"\r\n                    >\r\n                      ID: {order.id} Time: {myDate.getHours()} :{\" \"}\r\n                      {myDate.getMinutes() < 10\r\n                        ? \"0\" + myDate.getMinutes()\r\n                        : myDate.getMinutes()}\r\n                    </Alert>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item key={2}>\r\n                    <div\r\n                      style={\r\n                        order.orderType === \"TABLE\"\r\n                          ? { backgroundColor: \"cadetblue\" }\r\n                          : { backgroundColor: \"greenyellow\" }\r\n                      }\r\n                    >\r\n                      {order.orderType}\r\n                    </div>\r\n                    <span>Name: {order.user.name}</span> <br />\r\n                    Note: {order.note}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item key={3}>\r\n                    {order.entries.map((entry, ind) => {\r\n                      return (\r\n                        <div key={ind}>\r\n                          <Alert\r\n                            variant={entry.ready !== null ? \"primary\" : \"light\"}\r\n                          >\r\n                            {ind + 1}) {entry.dish.name} Qty: {entry.quantity}\r\n                          </Alert>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReadyOrders;\r\n","import \"./ServedOrders.css\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport MenuOrderModel from \"../../../Models/MenuOrderModel\";\r\nimport store from \"../../../Redux/Store\";\r\nimport globals from \"../../../Services/Globals\";\r\nimport { Alert, Card, ListGroup } from \"react-bootstrap\";\r\nimport jwtAxios from \"../../../Services/jwtAxios\";\r\n\r\nfunction ServedOrders(): JSX.Element {\r\n  let [orders, setOrders] = useState<MenuOrderModel[]>([]);\r\n  const history = useHistory();\r\n\r\n  const handleOrderServed = (id: number) => {\r\n    jwtAxios\r\n      .post(\r\n        globals.urls.localUrl + \"display/updateOrderStatus/\" + id + \"/PAID\",{})\r\n      .then(() => {\r\n        getOrders();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const getOrders =  () =>\r\n    jwtAxios\r\n        .get<MenuOrderModel[]>(\r\n          globals.urls.localUrl + \"display/getOrdersByStatus/SERVED\")\r\n        .then(function (response) {\r\n          setOrders(response.data);\r\n        })\r\n        .catch(function (error) {});\r\n\r\n  const calculateTotal = (order: MenuOrderModel): number => {\r\n    let total = 0;\r\n    order.entries.map((entry) => {\r\n      total += entry.dish.price * entry.quantity;\r\n      return null;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!store.getState().AuthState.auth.token) {\r\n      history.push(\"/login\");\r\n    }\r\n    getOrders();\r\n  }, [history]);\r\n  return (\r\n    <div className=\"ServedOrders\">\r\n      {orders &&\r\n        orders.map((order, index) => {\r\n          let myDate = new Date(order.time);\r\n          let total = calculateTotal(order);\r\n          return (\r\n            <div key={index} className=\"ServedOrderDiv\">\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item key={1}>\r\n                    <Alert variant=\"success\">\r\n                      ID: {order.id} Time: {myDate.getHours()} :{\" \"}\r\n                      {myDate.getMinutes() < 10\r\n                        ? \"0\" + myDate.getMinutes()\r\n                        : myDate.getMinutes()}\r\n                    </Alert>\r\n                    <Alert\r\n                      onClick={() => handleOrderServed(order.id)}\r\n                      variant=\"danger\"\r\n                    >\r\n                      TOTAL: {total}\r\n                    </Alert>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item key={2}>\r\n                    <div\r\n                      style={\r\n                        order.orderType === \"TABLE\"\r\n                          ? { backgroundColor: \"cadetblue\" }\r\n                          : { backgroundColor: \"greenyellow\" }\r\n                      }\r\n                    >\r\n                      {order.orderType}\r\n                    </div>\r\n                    <span>Name: {order.user.name}</span> <br />\r\n                    Note: {order.note}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item key={3}>\r\n                    {order.entries.map((entry, ind) => {\r\n                      return (\r\n                        <div key={ind}>\r\n                          <Alert\r\n                            variant={entry.ready !== null ? \"primary\" : \"light\"}\r\n                          >\r\n                            {ind + 1}) {entry.dish.name} Qty: {entry.quantity}\r\n                          </Alert>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </div>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ServedOrders;\r\n","import { Switch,Route } from \"react-router-dom\";\r\nimport Admin from \"../AdminArea/Admin/Admin\";\r\nimport Login from \"../Login/Login\";\r\nimport MakeOrder from \"../MakeOrder/MakeOrder\";\r\nimport OrderDisplay from \"../OrderDisplay/OrderDisplay\";\r\nimport PaidOrders from \"../PaidOrders/PaidOrders\";\r\nimport ReadyOrders from \"../ReadyOrders/ReadyOrders\";\r\nimport ServedOrders from \"../ServedOrders/ServedOrders\";\r\nimport \"./Routing.css\";\r\n\r\nfunction Routing(): JSX.Element {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/login\" component={Login} exact />\r\n      <Route path=\"/display\" component={OrderDisplay} exact />\r\n      <Route path=\"/ready\" component={ReadyOrders} exact />\r\n      <Route path=\"/served\" component={ServedOrders} exact />\r\n      <Route path=\"/paid\" component={PaidOrders} exact />\r\n      <Route path=\"/makeOrder\" component={MakeOrder} exact />\r\n      <Route path=\"/admin\" component={Admin} />\r\n      <Route path=\"/\" component={Login} exact />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default Routing;\r\n","import \"./Layout.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Header from \"./Header/Header\";\r\nimport Routing from \"../MainArea/Routing/Routing\";\r\nfunction Layout() {\r\n  return (\r\n    <BrowserRouter>\r\n      <div className=\"Layout\">\r\n        <header>\r\n          <Header />\r\n        </header>\r\n        <main>\r\n          <Routing />\r\n        </main>\r\n        <footer></footer>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Layout from \"./Components/LayoutArea/Layout\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Layout />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}